import{_ as a,c as t,o as i,ae as r}from"./chunks/framework.Dgg8-8ov.js";const u=JSON.parse('{"title":"AchievementAPI","description":"","frontmatter":{},"headers":[],"relativePath":"docs/api/AchievementAPI.md","filePath":"docs/api/AchievementAPI.md","lastUpdated":1750440754000}'),n={name:"docs/api/AchievementAPI.md"};function c(o,e,l,h,s,d){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="achievementapi" tabindex="-1">AchievementAPI <a class="header-anchor" href="#achievementapi" aria-label="Permalink to &quot;AchievementAPI&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="static-addachievement-achievementid-achievementname-requires" tabindex="-1">static <code>addAchievement(achievementID, achievementName, requires = [])</code> <a class="header-anchor" href="#static-addachievement-achievementid-achievementname-requires" aria-label="Permalink to &quot;static `addAchievement(achievementID, achievementName, requires = [])`&quot;">​</a></h3><h4 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h4><ul><li>Adds some achievement</li></ul><h4 id="arguments" tabindex="-1">Arguments <a class="header-anchor" href="#arguments" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><ul><li><code>achievementID</code> - id of the achievement</li><li><strong><code>string</code></strong> <code>achievementName</code> - name of the achievement</li><li><strong><code>array</code></strong> <code>requires</code> - array of achievement ids that are required to be unlocked for player to be able to get the achievement.</li></ul><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><ul><li><code>true</code> if the achievement was added successfully, <code>false</code> otherwise.</li></ul><hr><h3 id="static-grantachievement-player-player-achievementid" tabindex="-1">static <code>grantAchievement(Player player, achievementID)</code> <a class="header-anchor" href="#static-grantachievement-player-player-achievementid" aria-label="Permalink to &quot;static `grantAchievement(Player player, achievementID)`&quot;">​</a></h3><h4 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h4><ul><li>Gives some achievement to player</li></ul><h4 id="arguments-1" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-1" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><ul><li><strong><code>Player</code></strong> <code>player</code> - [[Player]] instance</li><li><code>achievemenetID</code> - id of the achievement</li></ul><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><ul><li><code>true</code> if the achievement was granted, <code>false</code> otherwise</li></ul><hr><h3 id="static-hasachievement-player-player-achievementid" tabindex="-1">static <code>hasAchievement(Player player, achievementID)</code> <a class="header-anchor" href="#static-hasachievement-player-player-achievementid" aria-label="Permalink to &quot;static `hasAchievement(Player player, achievementID)`&quot;">​</a></h3><h4 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h4><ul><li>Checks does a player have some achievement</li></ul><h4 id="arguments-2" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-2" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><ul><li><strong><code>Player</code></strong> <code>player</code> - [[Player]] instance</li><li><code>achievemenetID</code> - id of the achievement</li></ul><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><ul><li><code>true</code> if the player has the achievement, <code>false</code> otherwise</li></ul><hr><h3 id="static-broadcastachievement-player-player-achievementid" tabindex="-1">static <code>broadcastAchievement(Player player, achievementID)</code> <a class="header-anchor" href="#static-broadcastachievement-player-player-achievementid" aria-label="Permalink to &quot;static `broadcastAchievement(Player player, achievementID)`&quot;">​</a></h3><h4 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h4><ul><li>Broadcasts the achievement to the chat.</li><li>If the achivement exists, the function will call [[achievement.broadcast|Events#achievement.broadcast]] event.</li></ul><h4 id="arguments-3" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-3" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><ul><li><strong><code>Player</code></strong> <code>player</code> - [[Player]] instance</li><li><code>achievemenetID</code> - id of the achievement</li></ul><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><ul><li><code>true</code> if the achievement exists, <code>false</code> otherwise</li></ul><hr><h3 id="static-removeachievement-player-player-achievementid" tabindex="-1">static <code>removeAchievement(Player player, achievementID)</code> <a class="header-anchor" href="#static-removeachievement-player-player-achievementid" aria-label="Permalink to &quot;static `removeAchievement(Player player, achievementID)`&quot;">​</a></h3><h4 id="description-4" tabindex="-1">Description <a class="header-anchor" href="#description-4" aria-label="Permalink to &quot;Description&quot;">​</a></h4><ul><li>Removes the achievement from the player</li></ul><h4 id="arguments-4" tabindex="-1">Arguments <a class="header-anchor" href="#arguments-4" aria-label="Permalink to &quot;Arguments&quot;">​</a></h4><ul><li><strong><code>Player</code></strong> <code>player</code> - [[Player]] instance</li><li><code>achievemenetID</code> - id of the achievement</li></ul><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><ul><li>nothing</li></ul>',41)]))}const v=a(n,[["render",c]]);export{u as __pageData,v as default};
