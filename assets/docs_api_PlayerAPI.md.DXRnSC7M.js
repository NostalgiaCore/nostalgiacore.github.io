import{_ as a,c as r,o as t,ae as l}from"./chunks/framework.Dgg8-8ov.js";const h=JSON.parse('{"title":"PlayerAPI","description":"","frontmatter":{},"headers":[],"relativePath":"docs/api/PlayerAPI.md","filePath":"docs/api/PlayerAPI.md","lastUpdated":1750440754000}'),o={name:"docs/api/PlayerAPI.md"};function n(s,e,i,g,u,c){return t(),r("div",null,e[0]||(e[0]=[l('<h1 id="playerapi" tabindex="-1">PlayerAPI <a class="header-anchor" href="#playerapi" aria-label="Permalink to &quot;PlayerAPI&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="registercmd" tabindex="-1"><strong>registerCmd</strong> <a class="header-anchor" href="#registercmd" aria-label="Permalink to &quot;**registerCmd**&quot;">​</a></h3><ul><li>Args: (cmd, help = &quot;&quot;)</li></ul><blockquote><p><strong>cmd</strong> - name of cmd, String, <strong>help</strong> - display in help menu, optional, String</p></blockquote><ul><li>Returns: None</li><li>Description: Register a command with handler from [[PlayerAPI]].</li></ul><h3 id="get" tabindex="-1"><strong>get</strong> <a class="header-anchor" href="#get" aria-label="Permalink to &quot;**get**&quot;">​</a></h3><ul><li>Args: (name, alike = true, multiple = false)</li></ul><blockquote><p><strong>name</strong> - player nickname, <strong>alike</strong> - optional value, <strong>multiple</strong> - get more than 1 matches, optional value, String</p></blockquote><ul><li>Returns: <strong>[[Player]] instance</strong> or <strong>false</strong></li><li>Description: get a player by username.</li></ul><h3 id="teleport" tabindex="-1"><strong>teleport</strong> <a class="header-anchor" href="#teleport" aria-label="Permalink to &quot;**teleport**&quot;">​</a></h3><ul><li>Args: (&amp;name, &amp;target)</li></ul><blockquote><p><strong>name</strong> - reference to a <strong>variable</strong> which contains <strong>player nickname</strong>, <strong>target</strong> - reference to a <strong>variable</strong> which contains <strong>player nickname</strong> or <strong>&quot;w:{worldname}&quot;</strong></p></blockquote><ul><li>Returns: <strong>false</strong> if failed</li></ul><h3 id="tppos" tabindex="-1"><strong>tppos</strong> <a class="header-anchor" href="#tppos" aria-label="Permalink to &quot;**tppos**&quot;">​</a></h3><ul><li>Args: (&amp;name, &amp;x, &amp;y, &amp;z)</li></ul><blockquote><p><strong>name</strong> - reference to a <strong>variable</strong> which contains <strong>player nickname</strong>, <strong>&amp;x</strong>/<strong>&amp;y</strong>/<strong>&amp;z</strong> - reference to a variable which contains x/y/z coordinate</p></blockquote><ul><li>Returns: <strong>false</strong> if failed, <strong>true</strong> if success</li></ul><h3 id="broadcastpacket" tabindex="-1"><strong>broadcastPacket</strong> <a class="header-anchor" href="#broadcastpacket" aria-label="Permalink to &quot;**broadcastPacket**&quot;">​</a></h3><ul><li>Args: (players, packet)</li></ul><blockquote><p><strong>players</strong> - <strong>array</strong> of players, <strong>packet</strong> - <strong>RakNetDataPacket</strong> object</p></blockquote><ul><li>Returs: None</li></ul><h3 id="online" tabindex="-1"><strong>online</strong> <a class="header-anchor" href="#online" aria-label="Permalink to &quot;**online**&quot;">​</a></h3><ul><li>Args: None</li><li>Returns: Array of players on server</li></ul><h3 id="getoffline" tabindex="-1"><strong>getOffline</strong> <a class="header-anchor" href="#getoffline" aria-label="Permalink to &quot;**getOffline**&quot;">​</a></h3><ul><li>Args: (name)</li></ul><blockquote><p><strong>name</strong> - username of Player, String</p></blockquote><ul><li>Returns: <strong>Array with player data</strong> from players/ folder</li></ul><h3 id="spawnallplayers" tabindex="-1"><strong>spawnAllPlayers</strong> <a class="header-anchor" href="#spawnallplayers" aria-label="Permalink to &quot;**spawnAllPlayers**&quot;">​</a></h3><ul><li>Args: (player)</li></ul><blockquote><p><strong>player</strong> - instance of [[Player]]</p></blockquote><ul><li>Returns: None</li><li>Description: Spawn <strong>all other players</strong> to &lt;player&gt;.</li></ul><h3 id="getall" tabindex="-1"><strong>getAll</strong> <a class="header-anchor" href="#getall" aria-label="Permalink to &quot;**getAll**&quot;">​</a></h3><ul><li>Args: (level = null)</li></ul><blockquote><p><strong>level</strong>, optional value, instance of [[Level]]</p></blockquote><ul><li>Returns: <strong>Array</strong> with Players on all server or in specific world</li></ul><h3 id="getbyeid" tabindex="-1"><strong>getByEID</strong> <a class="header-anchor" href="#getbyeid" aria-label="Permalink to &quot;**getByEID**&quot;">​</a></h3><ul><li>Args: (eid)</li></ul><blockquote><p><strong>eid</strong> - eid of player, integer</p></blockquote><ul><li>Returns: <strong>false</strong> if no players were found, [[Player]] instance if player was found</li></ul><h3 id="spawntoallplayers" tabindex="-1"><strong>spawnToAllPlayers</strong> <a class="header-anchor" href="#spawntoallplayers" aria-label="Permalink to &quot;**spawnToAllPlayers**&quot;">​</a></h3><ul><li>Args: (player)</li></ul><blockquote><p><strong>player</strong> - instance of [Player]]</p></blockquote><ul><li>Returns: None</li><li>Description: spawns <strong>&lt;player&gt;</strong> to all other players</li></ul><h3 id="remove" tabindex="-1"><strong>remove</strong> <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;**remove**&quot;">​</a></h3><ul><li>Args: (CID)</li></ul><blockquote><p>CID - client id</p></blockquote><ul><li>Returns: None</li></ul>',48)]))}const d=a(o,[["render",n]]);export{h as __pageData,d as default};
