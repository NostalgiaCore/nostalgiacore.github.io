import{_ as e,c as t,o as a,ae as i}from"./chunks/framework.Dgg8-8ov.js";const h=JSON.parse('{"title":"TileAPI","description":"","frontmatter":{},"headers":[],"relativePath":"docs/api/TileAPI.md","filePath":"docs/api/TileAPI.md","lastUpdated":1750440754000}'),o={name:"docs/api/TileAPI.md"};function n(r,l,s,g,d,u){return a(),t("div",null,l[0]||(l[0]=[i('<h1 id="tileapi" tabindex="-1">TileAPI <a class="header-anchor" href="#tileapi" aria-label="Permalink to &quot;TileAPI&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="get" tabindex="-1"><strong>get</strong> <a class="header-anchor" href="#get" aria-label="Permalink to &quot;**get**&quot;">​</a></h3><ul><li>Args: (pos&lt;Position&gt;)</li></ul><blockquote><p>pos - position of TileEntity</p></blockquote><ul><li>Return: <strong>&lt;Tile instance&gt;</strong> or <strong>false</strong></li><li>Gets a TileEntity from its position</li></ul><h3 id="getbyid" tabindex="-1"><strong>getByID</strong> <a class="header-anchor" href="#getbyid" aria-label="Permalink to &quot;**getByID**&quot;">​</a></h3><ul><li>Args: (id&lt;Integer or Tile&gt;)</li></ul><blockquote><p>id - block id or instance of TileEntity</p></blockquote><ul><li>Return: <strong>&lt;Tile instance&gt;</strong></li><li>Gets a TileEntity instance from its id</li></ul><h3 id="getall" tabindex="-1"><strong>getAll</strong> <a class="header-anchor" href="#getall" aria-label="Permalink to &quot;**getAll**&quot;">​</a></h3><ul><li>Args: (level&lt;Level&gt;)</li></ul><blockquote><p>level - Level instance</p></blockquote><ul><li>Return: <strong>Array</strong> of tiles in level</li></ul><h3 id="add" tabindex="-1"><strong>add</strong> <a class="header-anchor" href="#add" aria-label="Permalink to &quot;**add**&quot;">​</a></h3><ul><li>Args: (level&lt;Level&gt;, class&lt;Constant Integer&gt;, x&lt;Integer&gt;, y&lt;Integer&gt;, z&lt;Integer&gt;, data&lt;Array&gt;)</li></ul><blockquote><p>level - Level instance, class - [[Class ID of Tile]], x - posX, y - posY, z - posZ, data - entity data</p></blockquote><ul><li>Return: <strong>&lt;Tile instance&gt;</strong></li><li>Adds new tile to the level.</li></ul><h3 id="addsign" tabindex="-1"><strong>addSign</strong> <a class="header-anchor" href="#addsign" aria-label="Permalink to &quot;**addSign**&quot;">​</a></h3><ul><li>Args: (level&lt;Level&gt;, x&lt;Integer&gt;, y&lt;Integer&gt;, z&lt;Integer&gt;, lines&lt;Array&gt;)</li></ul><blockquote><p>level - Level instance, x - posX, y - posY, z - posZ, lines - data of sign</p></blockquote><h3 id="spawntoall" tabindex="-1"><strong>spawnToAll</strong> <a class="header-anchor" href="#spawntoall" aria-label="Permalink to &quot;**spawnToAll**&quot;">​</a></h3><ul><li>Args: (tile&lt;Tile&gt;)</li><li>Return: None</li><li>Spawns tile for all players in the world.</li></ul><h3 id="spawnall" tabindex="-1"><strong>spawnAll</strong> <a class="header-anchor" href="#spawnall" aria-label="Permalink to &quot;**spawnAll**&quot;">​</a></h3><ul><li>Args: (player&lt;Player&gt;)</li><li>Return: None</li><li>Spawns all tiles to player</li></ul><h3 id="remove" tabindex="-1"><strong>remove</strong> <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;**remove**&quot;">​</a></h3><ul><li>Args: (id&lt;Integer&gt;)</li><li>Return: None</li><li>Removes a tile from world</li></ul>',27)]))}const p=e(o,[["render",n]]);export{h as __pageData,p as default};
